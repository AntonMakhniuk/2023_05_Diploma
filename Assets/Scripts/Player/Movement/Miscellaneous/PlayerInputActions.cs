//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Player/Movement/Miscellaneous/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerShip"",
            ""id"": ""40e0c021-8b2b-47c2-8c09-0c07232be718"",
            ""actions"": [
                {
                    ""name"": ""ToggleSlot_1"",
                    ""type"": ""Button"",
                    ""id"": ""0546c9aa-ea63-4dcc-8469-54bf924fb546"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleSlot_2"",
                    ""type"": ""Button"",
                    ""id"": ""eb13f302-d11f-4eed-b75f-da5959c0e791"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleSlot_3"",
                    ""type"": ""Button"",
                    ""id"": ""30a32f41-8864-45a9-b2bf-8e92cbd67098"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMarker"",
                    ""type"": ""Button"",
                    ""id"": ""62c16712-169c-412f-8007-d13377a27282"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleScanner"",
                    ""type"": ""Button"",
                    ""id"": ""8286cb57-4647-4a06-aa1b-f033a19bbbc6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary"",
                    ""type"": ""Button"",
                    ""id"": ""06370757-8d74-438c-a5fc-234cf5f42477"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary"",
                    ""type"": ""Button"",
                    ""id"": ""b2505daa-6e37-4b97-b0f0-9b1bbd690924"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tetriary"",
                    ""type"": ""Button"",
                    ""id"": ""6a6318fa-f9b0-4a83-b1e2-7659e0a3a6ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""f827c38f-a9fe-4abd-b12c-968e23eb7cc2"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brakes"",
                    ""type"": ""Button"",
                    ""id"": ""f44241a1-ae12-49b1-968c-46e3a4f6f4e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thrust"",
                    ""type"": ""Value"",
                    ""id"": ""a86a0477-64f5-45aa-bbe4-972be76d9523"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Strafe"",
                    ""type"": ""Value"",
                    ""id"": ""e44975b0-3ccd-47bd-824b-055fe946f162"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""ee059aac-951f-4baf-81d1-ee94905098c8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""7b9e5dd1-91c9-485e-a0bc-9512d925bacd"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""d7272ac4-8b6d-4f83-a6da-781284d7b737"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""Button"",
                    ""id"": ""35fa74d4-4618-45df-add9-3af1915b057b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""71cc4386-c5e5-411c-969f-63611f2d9ed5"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleSlot_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da645384-fbff-45ab-9ca9-b4c431cc0d1e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleSlot_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e09b738-071e-4b68-b10c-9dc2634a031f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleSlot_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""169f05d3-c038-47c4-ae33-d1d2626bb92a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12e15f89-592b-4bca-8f66-9946a559425b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""277b6764-9139-4d5b-a73c-3c024a818683"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brakes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ThrustKB"",
                    ""id"": ""49547e73-0abc-498d-886e-e56caf02b87f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d79a2557-b0a0-439d-b6e2-39cfffb0e2fd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ab15037f-fa99-46ba-af0d-7ec811459133"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""StrafeKB"",
                    ""id"": ""2dff6b50-469d-40ba-91ec-bc79bd829315"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""12c22c9f-127e-4c38-8404-1d4e1f9bff67"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c594dc1f-bb14-4e03-8d0c-5d890a6ab55a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PitchKB"",
                    ""id"": ""1d2474da-6d5a-4d6c-8026-8aa798182b69"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2a8e5547-52ca-4d5d-8427-8c448a0225c5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8e62f3be-6868-4f20-8451-b59dcbd09003"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""YawKB"",
                    ""id"": ""02f67b70-fb1f-4712-af71-ab88a734f9a9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""fa205a5b-2abc-4d91-af8b-3c38c8f5f946"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6fbeb2c5-63a0-4675-b918-a50422098dda"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""RollKB"",
                    ""id"": ""ea7003a9-84c6-415e-bda9-99dc143b7013"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7bee88fd-3571-4eff-9d60-63d8834a01cd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0a005394-e7ea-4b29-8ff5-8f257be59f25"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0f2b7d38-fc74-45d4-9427-cf514d3659d2"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tetriary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d9c4a16-afe4-4eb2-b84e-11290ae956bc"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMarker"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71c558f6-ab51-4606-9f32-3e392a27cf42"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleScanner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""222e4686-46c6-437a-8a06-0b1c0cb89731"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3db6a7db-124e-49e0-9a5e-88267e655f27"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""de4e012b-d437-41a5-8aa5-8ce88028bc3b"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8981f636-3aae-4f0b-a029-f802cb286843"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""beb6d50b-661a-4f2f-8fa9-e284c8a0f514"",
            ""actions"": [
                {
                    ""name"": ""CloseWindowOpenPause"",
                    ""type"": ""Button"",
                    ""id"": ""da0059cc-2e16-4147-98b0-f124c91eab12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleInventory"",
                    ""type"": ""Button"",
                    ""id"": ""80a86b74-e1ac-4cca-8591-eb0336f64123"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleWagons"",
                    ""type"": ""Button"",
                    ""id"": ""844fb4ca-5f6b-46b4-bc5f-d46056815b0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleProduction"",
                    ""type"": ""Button"",
                    ""id"": ""b4cc0ca3-394b-43bf-891e-43a150cc40ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleJournal"",
                    ""type"": ""Button"",
                    ""id"": ""c23b05dd-131a-422c-a80f-527071feb77c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMap"",
                    ""type"": ""Button"",
                    ""id"": ""86190192-fbc8-41e2-95d8-4d7e4eedc199"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractWithObject"",
                    ""type"": ""Button"",
                    ""id"": ""24ca2de8-80ec-495f-ae17-9e4df4f681d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""a67a894f-25df-4bae-b28d-231dcfac0597"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleUpgrades"",
                    ""type"": ""Button"",
                    ""id"": ""a2ae6e64-5119-4382-9b6d-229e64ef7355"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5f70ee99-4f1a-45bd-b9f9-a87e269a3118"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseWindowOpenPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""827b654f-65b4-4e47-90a2-5c7dd4f0d9ef"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e1a5d03-137b-4c00-bedf-a1eee93371ed"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleWagons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d34d2f2-01cf-4ff3-ac16-f505acaade8f"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleProduction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bef99ee-e7d9-40b8-aef7-9675bc213d63"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleJournal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c5ee2a8-21d6-4541-94e1-12f914bcf04c"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe7eb75-7fcc-49dc-b26c-a60e8a68a011"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractWithObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bdf6118-28f4-47f8-b3d0-b000b2960a8c"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""feec2ebf-0d88-4bb0-afba-0794b709776a"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleUpgrades"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerCamera"",
            ""id"": ""6e0f7517-3757-496d-823e-e379aeb2934a"",
            ""actions"": [
                {
                    ""name"": ""CameraMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""42c50dc8-f508-4f61-808f-053bafd339c2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2ed60cd4-b949-41b7-93dd-40c068de4109"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DroneOrbitCamera"",
                    ""type"": ""Button"",
                    ""id"": ""10cc2ae2-829f-4196-9093-3db16b263b9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d36682e0-7e25-4c8b-9fa9-488a9a09dd5c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""817e75f4-2fea-479d-b180-f45ff77de1ac"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""321b3fba-90f6-4395-b9a4-11a3dd1e85c2"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DroneOrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Building"",
            ""id"": ""3f34f77f-8554-4eed-b8b7-0f71c0bcd64a"",
            ""actions"": [
                {
                    ""name"": ""RotateBlueprintLeft"",
                    ""type"": ""Button"",
                    ""id"": ""c2b411bb-2e07-45c7-b92c-3751bc181498"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateBlueprintRight"",
                    ""type"": ""Button"",
                    ""id"": ""19e3544d-5006-47fd-bbab-9a10b62c4db7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaceDownBlueprint"",
                    ""type"": ""Button"",
                    ""id"": ""43483b61-9016-4645-a3cd-cd7462e2865e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ClearBlueprint"",
                    ""type"": ""Button"",
                    ""id"": ""462703b2-f19b-429e-944e-342c6707cc7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""64356dba-9438-4118-a199-ecb240bc861a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateBlueprintLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec7778eb-9acb-4d67-8ddb-ff60aa1b46d3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateBlueprintRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de891e31-ca69-4ae9-a072-2790a3f72649"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceDownBlueprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2804ce4a-d74a-4841-b71e-df7fcca7ea76"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClearBlueprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerShipMap"",
            ""id"": ""7f8af0a8-e42a-4860-af81-ae87cd0cff3c"",
            ""actions"": [
                {
                    ""name"": ""MoveToPoint"",
                    ""type"": ""Button"",
                    ""id"": ""2edabceb-2e5a-499b-bdca-d0d47934b7b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCamera"",
                    ""type"": ""Value"",
                    ""id"": ""24f41c06-edf3-4b39-af29-65001327eaec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ReturnCameraToShip"",
                    ""type"": ""Button"",
                    ""id"": ""3d95991f-a496-4a8c-8397-969ddc8bceef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomCamera"",
                    ""type"": ""Value"",
                    ""id"": ""8a4637b7-7678-4b82-ad21-17439f72ae79"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Button"",
                    ""id"": ""9502bada-b2a9-4a78-a794-395368f20342"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FollowShip"",
                    ""type"": ""Button"",
                    ""id"": ""3cd79e90-fa29-4832-8b46-886f7bb03857"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b6bbaa2a-0e00-48a3-bd7c-fe65459ca5c0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveToPoint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""13cfea5f-779e-41f5-9b38-8c14e8488062"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9dfe13f1-6ad9-4482-8d21-acd2c5751cf0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""740389d3-aa87-4a3f-9516-ea811c7b1429"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4e56ba20-72e6-445a-a174-7e8eb16393df"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3c358bb5-4054-4c0f-be72-4049167c1b7f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7b819545-a017-4acb-971b-23944a8ee661"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReturnCameraToShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""ed0f4941-8b21-4f40-8a7e-d5d5f9e8c094"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8f858896-ec82-4bd5-bf10-e6bacb323e34"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""960ffc83-2eaa-440b-abf1-54198d17965b"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d46a7328-ac6e-44a6-8076-7479af02005d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d0be9496-9a9e-4f97-bc59-d7f66f56e2da"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d78af5d0-b19e-47ba-947d-23205d0b0ed3"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""655aa610-92d5-478a-96bc-66d6e362b1dc"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FollowShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerShip
        m_PlayerShip = asset.FindActionMap("PlayerShip", throwIfNotFound: true);
        m_PlayerShip_ToggleSlot_1 = m_PlayerShip.FindAction("ToggleSlot_1", throwIfNotFound: true);
        m_PlayerShip_ToggleSlot_2 = m_PlayerShip.FindAction("ToggleSlot_2", throwIfNotFound: true);
        m_PlayerShip_ToggleSlot_3 = m_PlayerShip.FindAction("ToggleSlot_3", throwIfNotFound: true);
        m_PlayerShip_ToggleMarker = m_PlayerShip.FindAction("ToggleMarker", throwIfNotFound: true);
        m_PlayerShip_ToggleScanner = m_PlayerShip.FindAction("ToggleScanner", throwIfNotFound: true);
        m_PlayerShip_Primary = m_PlayerShip.FindAction("Primary", throwIfNotFound: true);
        m_PlayerShip_Secondary = m_PlayerShip.FindAction("Secondary", throwIfNotFound: true);
        m_PlayerShip_Tetriary = m_PlayerShip.FindAction("Tetriary", throwIfNotFound: true);
        m_PlayerShip_Scroll = m_PlayerShip.FindAction("Scroll", throwIfNotFound: true);
        m_PlayerShip_Brakes = m_PlayerShip.FindAction("Brakes", throwIfNotFound: true);
        m_PlayerShip_Thrust = m_PlayerShip.FindAction("Thrust", throwIfNotFound: true);
        m_PlayerShip_Strafe = m_PlayerShip.FindAction("Strafe", throwIfNotFound: true);
        m_PlayerShip_Pitch = m_PlayerShip.FindAction("Pitch", throwIfNotFound: true);
        m_PlayerShip_Yaw = m_PlayerShip.FindAction("Yaw", throwIfNotFound: true);
        m_PlayerShip_Roll = m_PlayerShip.FindAction("Roll", throwIfNotFound: true);
        m_PlayerShip_Boost = m_PlayerShip.FindAction("Boost", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_CloseWindowOpenPause = m_UI.FindAction("CloseWindowOpenPause", throwIfNotFound: true);
        m_UI_ToggleInventory = m_UI.FindAction("ToggleInventory", throwIfNotFound: true);
        m_UI_ToggleWagons = m_UI.FindAction("ToggleWagons", throwIfNotFound: true);
        m_UI_ToggleProduction = m_UI.FindAction("ToggleProduction", throwIfNotFound: true);
        m_UI_ToggleJournal = m_UI.FindAction("ToggleJournal", throwIfNotFound: true);
        m_UI_ToggleMap = m_UI.FindAction("ToggleMap", throwIfNotFound: true);
        m_UI_InteractWithObject = m_UI.FindAction("InteractWithObject", throwIfNotFound: true);
        m_UI_ToggleBuilding = m_UI.FindAction("ToggleBuilding", throwIfNotFound: true);
        m_UI_ToggleUpgrades = m_UI.FindAction("ToggleUpgrades", throwIfNotFound: true);
        // PlayerCamera
        m_PlayerCamera = asset.FindActionMap("PlayerCamera", throwIfNotFound: true);
        m_PlayerCamera_CameraMovement = m_PlayerCamera.FindAction("CameraMovement", throwIfNotFound: true);
        m_PlayerCamera_MousePosition = m_PlayerCamera.FindAction("MousePosition", throwIfNotFound: true);
        m_PlayerCamera_DroneOrbitCamera = m_PlayerCamera.FindAction("DroneOrbitCamera", throwIfNotFound: true);
        // Building
        m_Building = asset.FindActionMap("Building", throwIfNotFound: true);
        m_Building_RotateBlueprintLeft = m_Building.FindAction("RotateBlueprintLeft", throwIfNotFound: true);
        m_Building_RotateBlueprintRight = m_Building.FindAction("RotateBlueprintRight", throwIfNotFound: true);
        m_Building_PlaceDownBlueprint = m_Building.FindAction("PlaceDownBlueprint", throwIfNotFound: true);
        m_Building_ClearBlueprint = m_Building.FindAction("ClearBlueprint", throwIfNotFound: true);
        // PlayerShipMap
        m_PlayerShipMap = asset.FindActionMap("PlayerShipMap", throwIfNotFound: true);
        m_PlayerShipMap_MoveToPoint = m_PlayerShipMap.FindAction("MoveToPoint", throwIfNotFound: true);
        m_PlayerShipMap_MoveCamera = m_PlayerShipMap.FindAction("MoveCamera", throwIfNotFound: true);
        m_PlayerShipMap_ReturnCameraToShip = m_PlayerShipMap.FindAction("ReturnCameraToShip", throwIfNotFound: true);
        m_PlayerShipMap_ZoomCamera = m_PlayerShipMap.FindAction("ZoomCamera", throwIfNotFound: true);
        m_PlayerShipMap_RotateCamera = m_PlayerShipMap.FindAction("RotateCamera", throwIfNotFound: true);
        m_PlayerShipMap_FollowShip = m_PlayerShipMap.FindAction("FollowShip", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerShip
    private readonly InputActionMap m_PlayerShip;
    private List<IPlayerShipActions> m_PlayerShipActionsCallbackInterfaces = new List<IPlayerShipActions>();
    private readonly InputAction m_PlayerShip_ToggleSlot_1;
    private readonly InputAction m_PlayerShip_ToggleSlot_2;
    private readonly InputAction m_PlayerShip_ToggleSlot_3;
    private readonly InputAction m_PlayerShip_ToggleMarker;
    private readonly InputAction m_PlayerShip_ToggleScanner;
    private readonly InputAction m_PlayerShip_Primary;
    private readonly InputAction m_PlayerShip_Secondary;
    private readonly InputAction m_PlayerShip_Tetriary;
    private readonly InputAction m_PlayerShip_Scroll;
    private readonly InputAction m_PlayerShip_Brakes;
    private readonly InputAction m_PlayerShip_Thrust;
    private readonly InputAction m_PlayerShip_Strafe;
    private readonly InputAction m_PlayerShip_Pitch;
    private readonly InputAction m_PlayerShip_Yaw;
    private readonly InputAction m_PlayerShip_Roll;
    private readonly InputAction m_PlayerShip_Boost;
    public struct PlayerShipActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerShipActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleSlot_1 => m_Wrapper.m_PlayerShip_ToggleSlot_1;
        public InputAction @ToggleSlot_2 => m_Wrapper.m_PlayerShip_ToggleSlot_2;
        public InputAction @ToggleSlot_3 => m_Wrapper.m_PlayerShip_ToggleSlot_3;
        public InputAction @ToggleMarker => m_Wrapper.m_PlayerShip_ToggleMarker;
        public InputAction @ToggleScanner => m_Wrapper.m_PlayerShip_ToggleScanner;
        public InputAction @Primary => m_Wrapper.m_PlayerShip_Primary;
        public InputAction @Secondary => m_Wrapper.m_PlayerShip_Secondary;
        public InputAction @Tetriary => m_Wrapper.m_PlayerShip_Tetriary;
        public InputAction @Scroll => m_Wrapper.m_PlayerShip_Scroll;
        public InputAction @Brakes => m_Wrapper.m_PlayerShip_Brakes;
        public InputAction @Thrust => m_Wrapper.m_PlayerShip_Thrust;
        public InputAction @Strafe => m_Wrapper.m_PlayerShip_Strafe;
        public InputAction @Pitch => m_Wrapper.m_PlayerShip_Pitch;
        public InputAction @Yaw => m_Wrapper.m_PlayerShip_Yaw;
        public InputAction @Roll => m_Wrapper.m_PlayerShip_Roll;
        public InputAction @Boost => m_Wrapper.m_PlayerShip_Boost;
        public InputActionMap Get() { return m_Wrapper.m_PlayerShip; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerShipActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerShipActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Add(instance);
            @ToggleSlot_1.started += instance.OnToggleSlot_1;
            @ToggleSlot_1.performed += instance.OnToggleSlot_1;
            @ToggleSlot_1.canceled += instance.OnToggleSlot_1;
            @ToggleSlot_2.started += instance.OnToggleSlot_2;
            @ToggleSlot_2.performed += instance.OnToggleSlot_2;
            @ToggleSlot_2.canceled += instance.OnToggleSlot_2;
            @ToggleSlot_3.started += instance.OnToggleSlot_3;
            @ToggleSlot_3.performed += instance.OnToggleSlot_3;
            @ToggleSlot_3.canceled += instance.OnToggleSlot_3;
            @ToggleMarker.started += instance.OnToggleMarker;
            @ToggleMarker.performed += instance.OnToggleMarker;
            @ToggleMarker.canceled += instance.OnToggleMarker;
            @ToggleScanner.started += instance.OnToggleScanner;
            @ToggleScanner.performed += instance.OnToggleScanner;
            @ToggleScanner.canceled += instance.OnToggleScanner;
            @Primary.started += instance.OnPrimary;
            @Primary.performed += instance.OnPrimary;
            @Primary.canceled += instance.OnPrimary;
            @Secondary.started += instance.OnSecondary;
            @Secondary.performed += instance.OnSecondary;
            @Secondary.canceled += instance.OnSecondary;
            @Tetriary.started += instance.OnTetriary;
            @Tetriary.performed += instance.OnTetriary;
            @Tetriary.canceled += instance.OnTetriary;
            @Scroll.started += instance.OnScroll;
            @Scroll.performed += instance.OnScroll;
            @Scroll.canceled += instance.OnScroll;
            @Brakes.started += instance.OnBrakes;
            @Brakes.performed += instance.OnBrakes;
            @Brakes.canceled += instance.OnBrakes;
            @Thrust.started += instance.OnThrust;
            @Thrust.performed += instance.OnThrust;
            @Thrust.canceled += instance.OnThrust;
            @Strafe.started += instance.OnStrafe;
            @Strafe.performed += instance.OnStrafe;
            @Strafe.canceled += instance.OnStrafe;
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Boost.started += instance.OnBoost;
            @Boost.performed += instance.OnBoost;
            @Boost.canceled += instance.OnBoost;
        }

        private void UnregisterCallbacks(IPlayerShipActions instance)
        {
            @ToggleSlot_1.started -= instance.OnToggleSlot_1;
            @ToggleSlot_1.performed -= instance.OnToggleSlot_1;
            @ToggleSlot_1.canceled -= instance.OnToggleSlot_1;
            @ToggleSlot_2.started -= instance.OnToggleSlot_2;
            @ToggleSlot_2.performed -= instance.OnToggleSlot_2;
            @ToggleSlot_2.canceled -= instance.OnToggleSlot_2;
            @ToggleSlot_3.started -= instance.OnToggleSlot_3;
            @ToggleSlot_3.performed -= instance.OnToggleSlot_3;
            @ToggleSlot_3.canceled -= instance.OnToggleSlot_3;
            @ToggleMarker.started -= instance.OnToggleMarker;
            @ToggleMarker.performed -= instance.OnToggleMarker;
            @ToggleMarker.canceled -= instance.OnToggleMarker;
            @ToggleScanner.started -= instance.OnToggleScanner;
            @ToggleScanner.performed -= instance.OnToggleScanner;
            @ToggleScanner.canceled -= instance.OnToggleScanner;
            @Primary.started -= instance.OnPrimary;
            @Primary.performed -= instance.OnPrimary;
            @Primary.canceled -= instance.OnPrimary;
            @Secondary.started -= instance.OnSecondary;
            @Secondary.performed -= instance.OnSecondary;
            @Secondary.canceled -= instance.OnSecondary;
            @Tetriary.started -= instance.OnTetriary;
            @Tetriary.performed -= instance.OnTetriary;
            @Tetriary.canceled -= instance.OnTetriary;
            @Scroll.started -= instance.OnScroll;
            @Scroll.performed -= instance.OnScroll;
            @Scroll.canceled -= instance.OnScroll;
            @Brakes.started -= instance.OnBrakes;
            @Brakes.performed -= instance.OnBrakes;
            @Brakes.canceled -= instance.OnBrakes;
            @Thrust.started -= instance.OnThrust;
            @Thrust.performed -= instance.OnThrust;
            @Thrust.canceled -= instance.OnThrust;
            @Strafe.started -= instance.OnStrafe;
            @Strafe.performed -= instance.OnStrafe;
            @Strafe.canceled -= instance.OnStrafe;
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Boost.started -= instance.OnBoost;
            @Boost.performed -= instance.OnBoost;
            @Boost.canceled -= instance.OnBoost;
        }

        public void RemoveCallbacks(IPlayerShipActions instance)
        {
            if (m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerShipActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerShipActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerShipActions @PlayerShip => new PlayerShipActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_CloseWindowOpenPause;
    private readonly InputAction m_UI_ToggleInventory;
    private readonly InputAction m_UI_ToggleWagons;
    private readonly InputAction m_UI_ToggleProduction;
    private readonly InputAction m_UI_ToggleJournal;
    private readonly InputAction m_UI_ToggleMap;
    private readonly InputAction m_UI_InteractWithObject;
    private readonly InputAction m_UI_ToggleBuilding;
    private readonly InputAction m_UI_ToggleUpgrades;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseWindowOpenPause => m_Wrapper.m_UI_CloseWindowOpenPause;
        public InputAction @ToggleInventory => m_Wrapper.m_UI_ToggleInventory;
        public InputAction @ToggleWagons => m_Wrapper.m_UI_ToggleWagons;
        public InputAction @ToggleProduction => m_Wrapper.m_UI_ToggleProduction;
        public InputAction @ToggleJournal => m_Wrapper.m_UI_ToggleJournal;
        public InputAction @ToggleMap => m_Wrapper.m_UI_ToggleMap;
        public InputAction @InteractWithObject => m_Wrapper.m_UI_InteractWithObject;
        public InputAction @ToggleBuilding => m_Wrapper.m_UI_ToggleBuilding;
        public InputAction @ToggleUpgrades => m_Wrapper.m_UI_ToggleUpgrades;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @CloseWindowOpenPause.started += instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.performed += instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.canceled += instance.OnCloseWindowOpenPause;
            @ToggleInventory.started += instance.OnToggleInventory;
            @ToggleInventory.performed += instance.OnToggleInventory;
            @ToggleInventory.canceled += instance.OnToggleInventory;
            @ToggleWagons.started += instance.OnToggleWagons;
            @ToggleWagons.performed += instance.OnToggleWagons;
            @ToggleWagons.canceled += instance.OnToggleWagons;
            @ToggleProduction.started += instance.OnToggleProduction;
            @ToggleProduction.performed += instance.OnToggleProduction;
            @ToggleProduction.canceled += instance.OnToggleProduction;
            @ToggleJournal.started += instance.OnToggleJournal;
            @ToggleJournal.performed += instance.OnToggleJournal;
            @ToggleJournal.canceled += instance.OnToggleJournal;
            @ToggleMap.started += instance.OnToggleMap;
            @ToggleMap.performed += instance.OnToggleMap;
            @ToggleMap.canceled += instance.OnToggleMap;
            @InteractWithObject.started += instance.OnInteractWithObject;
            @InteractWithObject.performed += instance.OnInteractWithObject;
            @InteractWithObject.canceled += instance.OnInteractWithObject;
            @ToggleBuilding.started += instance.OnToggleBuilding;
            @ToggleBuilding.performed += instance.OnToggleBuilding;
            @ToggleBuilding.canceled += instance.OnToggleBuilding;
            @ToggleUpgrades.started += instance.OnToggleUpgrades;
            @ToggleUpgrades.performed += instance.OnToggleUpgrades;
            @ToggleUpgrades.canceled += instance.OnToggleUpgrades;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @CloseWindowOpenPause.started -= instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.performed -= instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.canceled -= instance.OnCloseWindowOpenPause;
            @ToggleInventory.started -= instance.OnToggleInventory;
            @ToggleInventory.performed -= instance.OnToggleInventory;
            @ToggleInventory.canceled -= instance.OnToggleInventory;
            @ToggleWagons.started -= instance.OnToggleWagons;
            @ToggleWagons.performed -= instance.OnToggleWagons;
            @ToggleWagons.canceled -= instance.OnToggleWagons;
            @ToggleProduction.started -= instance.OnToggleProduction;
            @ToggleProduction.performed -= instance.OnToggleProduction;
            @ToggleProduction.canceled -= instance.OnToggleProduction;
            @ToggleJournal.started -= instance.OnToggleJournal;
            @ToggleJournal.performed -= instance.OnToggleJournal;
            @ToggleJournal.canceled -= instance.OnToggleJournal;
            @ToggleMap.started -= instance.OnToggleMap;
            @ToggleMap.performed -= instance.OnToggleMap;
            @ToggleMap.canceled -= instance.OnToggleMap;
            @InteractWithObject.started -= instance.OnInteractWithObject;
            @InteractWithObject.performed -= instance.OnInteractWithObject;
            @InteractWithObject.canceled -= instance.OnInteractWithObject;
            @ToggleBuilding.started -= instance.OnToggleBuilding;
            @ToggleBuilding.performed -= instance.OnToggleBuilding;
            @ToggleBuilding.canceled -= instance.OnToggleBuilding;
            @ToggleUpgrades.started -= instance.OnToggleUpgrades;
            @ToggleUpgrades.performed -= instance.OnToggleUpgrades;
            @ToggleUpgrades.canceled -= instance.OnToggleUpgrades;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // PlayerCamera
    private readonly InputActionMap m_PlayerCamera;
    private List<IPlayerCameraActions> m_PlayerCameraActionsCallbackInterfaces = new List<IPlayerCameraActions>();
    private readonly InputAction m_PlayerCamera_CameraMovement;
    private readonly InputAction m_PlayerCamera_MousePosition;
    private readonly InputAction m_PlayerCamera_DroneOrbitCamera;
    public struct PlayerCameraActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerCameraActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraMovement => m_Wrapper.m_PlayerCamera_CameraMovement;
        public InputAction @MousePosition => m_Wrapper.m_PlayerCamera_MousePosition;
        public InputAction @DroneOrbitCamera => m_Wrapper.m_PlayerCamera_DroneOrbitCamera;
        public InputActionMap Get() { return m_Wrapper.m_PlayerCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerCameraActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerCameraActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Add(instance);
            @CameraMovement.started += instance.OnCameraMovement;
            @CameraMovement.performed += instance.OnCameraMovement;
            @CameraMovement.canceled += instance.OnCameraMovement;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @DroneOrbitCamera.started += instance.OnDroneOrbitCamera;
            @DroneOrbitCamera.performed += instance.OnDroneOrbitCamera;
            @DroneOrbitCamera.canceled += instance.OnDroneOrbitCamera;
        }

        private void UnregisterCallbacks(IPlayerCameraActions instance)
        {
            @CameraMovement.started -= instance.OnCameraMovement;
            @CameraMovement.performed -= instance.OnCameraMovement;
            @CameraMovement.canceled -= instance.OnCameraMovement;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @DroneOrbitCamera.started -= instance.OnDroneOrbitCamera;
            @DroneOrbitCamera.performed -= instance.OnDroneOrbitCamera;
            @DroneOrbitCamera.canceled -= instance.OnDroneOrbitCamera;
        }

        public void RemoveCallbacks(IPlayerCameraActions instance)
        {
            if (m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerCameraActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerCameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerCameraActions @PlayerCamera => new PlayerCameraActions(this);

    // Building
    private readonly InputActionMap m_Building;
    private List<IBuildingActions> m_BuildingActionsCallbackInterfaces = new List<IBuildingActions>();
    private readonly InputAction m_Building_RotateBlueprintLeft;
    private readonly InputAction m_Building_RotateBlueprintRight;
    private readonly InputAction m_Building_PlaceDownBlueprint;
    private readonly InputAction m_Building_ClearBlueprint;
    public struct BuildingActions
    {
        private @PlayerInputActions m_Wrapper;
        public BuildingActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @RotateBlueprintLeft => m_Wrapper.m_Building_RotateBlueprintLeft;
        public InputAction @RotateBlueprintRight => m_Wrapper.m_Building_RotateBlueprintRight;
        public InputAction @PlaceDownBlueprint => m_Wrapper.m_Building_PlaceDownBlueprint;
        public InputAction @ClearBlueprint => m_Wrapper.m_Building_ClearBlueprint;
        public InputActionMap Get() { return m_Wrapper.m_Building; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildingActions set) { return set.Get(); }
        public void AddCallbacks(IBuildingActions instance)
        {
            if (instance == null || m_Wrapper.m_BuildingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BuildingActionsCallbackInterfaces.Add(instance);
            @RotateBlueprintLeft.started += instance.OnRotateBlueprintLeft;
            @RotateBlueprintLeft.performed += instance.OnRotateBlueprintLeft;
            @RotateBlueprintLeft.canceled += instance.OnRotateBlueprintLeft;
            @RotateBlueprintRight.started += instance.OnRotateBlueprintRight;
            @RotateBlueprintRight.performed += instance.OnRotateBlueprintRight;
            @RotateBlueprintRight.canceled += instance.OnRotateBlueprintRight;
            @PlaceDownBlueprint.started += instance.OnPlaceDownBlueprint;
            @PlaceDownBlueprint.performed += instance.OnPlaceDownBlueprint;
            @PlaceDownBlueprint.canceled += instance.OnPlaceDownBlueprint;
            @ClearBlueprint.started += instance.OnClearBlueprint;
            @ClearBlueprint.performed += instance.OnClearBlueprint;
            @ClearBlueprint.canceled += instance.OnClearBlueprint;
        }

        private void UnregisterCallbacks(IBuildingActions instance)
        {
            @RotateBlueprintLeft.started -= instance.OnRotateBlueprintLeft;
            @RotateBlueprintLeft.performed -= instance.OnRotateBlueprintLeft;
            @RotateBlueprintLeft.canceled -= instance.OnRotateBlueprintLeft;
            @RotateBlueprintRight.started -= instance.OnRotateBlueprintRight;
            @RotateBlueprintRight.performed -= instance.OnRotateBlueprintRight;
            @RotateBlueprintRight.canceled -= instance.OnRotateBlueprintRight;
            @PlaceDownBlueprint.started -= instance.OnPlaceDownBlueprint;
            @PlaceDownBlueprint.performed -= instance.OnPlaceDownBlueprint;
            @PlaceDownBlueprint.canceled -= instance.OnPlaceDownBlueprint;
            @ClearBlueprint.started -= instance.OnClearBlueprint;
            @ClearBlueprint.performed -= instance.OnClearBlueprint;
            @ClearBlueprint.canceled -= instance.OnClearBlueprint;
        }

        public void RemoveCallbacks(IBuildingActions instance)
        {
            if (m_Wrapper.m_BuildingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBuildingActions instance)
        {
            foreach (var item in m_Wrapper.m_BuildingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BuildingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BuildingActions @Building => new BuildingActions(this);

    // PlayerShipMap
    private readonly InputActionMap m_PlayerShipMap;
    private List<IPlayerShipMapActions> m_PlayerShipMapActionsCallbackInterfaces = new List<IPlayerShipMapActions>();
    private readonly InputAction m_PlayerShipMap_MoveToPoint;
    private readonly InputAction m_PlayerShipMap_MoveCamera;
    private readonly InputAction m_PlayerShipMap_ReturnCameraToShip;
    private readonly InputAction m_PlayerShipMap_ZoomCamera;
    private readonly InputAction m_PlayerShipMap_RotateCamera;
    private readonly InputAction m_PlayerShipMap_FollowShip;
    public struct PlayerShipMapActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerShipMapActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveToPoint => m_Wrapper.m_PlayerShipMap_MoveToPoint;
        public InputAction @MoveCamera => m_Wrapper.m_PlayerShipMap_MoveCamera;
        public InputAction @ReturnCameraToShip => m_Wrapper.m_PlayerShipMap_ReturnCameraToShip;
        public InputAction @ZoomCamera => m_Wrapper.m_PlayerShipMap_ZoomCamera;
        public InputAction @RotateCamera => m_Wrapper.m_PlayerShipMap_RotateCamera;
        public InputAction @FollowShip => m_Wrapper.m_PlayerShipMap_FollowShip;
        public InputActionMap Get() { return m_Wrapper.m_PlayerShipMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerShipMapActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerShipMapActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerShipMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerShipMapActionsCallbackInterfaces.Add(instance);
            @MoveToPoint.started += instance.OnMoveToPoint;
            @MoveToPoint.performed += instance.OnMoveToPoint;
            @MoveToPoint.canceled += instance.OnMoveToPoint;
            @MoveCamera.started += instance.OnMoveCamera;
            @MoveCamera.performed += instance.OnMoveCamera;
            @MoveCamera.canceled += instance.OnMoveCamera;
            @ReturnCameraToShip.started += instance.OnReturnCameraToShip;
            @ReturnCameraToShip.performed += instance.OnReturnCameraToShip;
            @ReturnCameraToShip.canceled += instance.OnReturnCameraToShip;
            @ZoomCamera.started += instance.OnZoomCamera;
            @ZoomCamera.performed += instance.OnZoomCamera;
            @ZoomCamera.canceled += instance.OnZoomCamera;
            @RotateCamera.started += instance.OnRotateCamera;
            @RotateCamera.performed += instance.OnRotateCamera;
            @RotateCamera.canceled += instance.OnRotateCamera;
            @FollowShip.started += instance.OnFollowShip;
            @FollowShip.performed += instance.OnFollowShip;
            @FollowShip.canceled += instance.OnFollowShip;
        }

        private void UnregisterCallbacks(IPlayerShipMapActions instance)
        {
            @MoveToPoint.started -= instance.OnMoveToPoint;
            @MoveToPoint.performed -= instance.OnMoveToPoint;
            @MoveToPoint.canceled -= instance.OnMoveToPoint;
            @MoveCamera.started -= instance.OnMoveCamera;
            @MoveCamera.performed -= instance.OnMoveCamera;
            @MoveCamera.canceled -= instance.OnMoveCamera;
            @ReturnCameraToShip.started -= instance.OnReturnCameraToShip;
            @ReturnCameraToShip.performed -= instance.OnReturnCameraToShip;
            @ReturnCameraToShip.canceled -= instance.OnReturnCameraToShip;
            @ZoomCamera.started -= instance.OnZoomCamera;
            @ZoomCamera.performed -= instance.OnZoomCamera;
            @ZoomCamera.canceled -= instance.OnZoomCamera;
            @RotateCamera.started -= instance.OnRotateCamera;
            @RotateCamera.performed -= instance.OnRotateCamera;
            @RotateCamera.canceled -= instance.OnRotateCamera;
            @FollowShip.started -= instance.OnFollowShip;
            @FollowShip.performed -= instance.OnFollowShip;
            @FollowShip.canceled -= instance.OnFollowShip;
        }

        public void RemoveCallbacks(IPlayerShipMapActions instance)
        {
            if (m_Wrapper.m_PlayerShipMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerShipMapActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerShipMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerShipMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerShipMapActions @PlayerShipMap => new PlayerShipMapActions(this);
    public interface IPlayerShipActions
    {
        void OnToggleSlot_1(InputAction.CallbackContext context);
        void OnToggleSlot_2(InputAction.CallbackContext context);
        void OnToggleSlot_3(InputAction.CallbackContext context);
        void OnToggleMarker(InputAction.CallbackContext context);
        void OnToggleScanner(InputAction.CallbackContext context);
        void OnPrimary(InputAction.CallbackContext context);
        void OnSecondary(InputAction.CallbackContext context);
        void OnTetriary(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
        void OnBrakes(InputAction.CallbackContext context);
        void OnThrust(InputAction.CallbackContext context);
        void OnStrafe(InputAction.CallbackContext context);
        void OnPitch(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnCloseWindowOpenPause(InputAction.CallbackContext context);
        void OnToggleInventory(InputAction.CallbackContext context);
        void OnToggleWagons(InputAction.CallbackContext context);
        void OnToggleProduction(InputAction.CallbackContext context);
        void OnToggleJournal(InputAction.CallbackContext context);
        void OnToggleMap(InputAction.CallbackContext context);
        void OnInteractWithObject(InputAction.CallbackContext context);
        void OnToggleBuilding(InputAction.CallbackContext context);
        void OnToggleUpgrades(InputAction.CallbackContext context);
    }
    public interface IPlayerCameraActions
    {
        void OnCameraMovement(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnDroneOrbitCamera(InputAction.CallbackContext context);
    }
    public interface IBuildingActions
    {
        void OnRotateBlueprintLeft(InputAction.CallbackContext context);
        void OnRotateBlueprintRight(InputAction.CallbackContext context);
        void OnPlaceDownBlueprint(InputAction.CallbackContext context);
        void OnClearBlueprint(InputAction.CallbackContext context);
    }
    public interface IPlayerShipMapActions
    {
        void OnMoveToPoint(InputAction.CallbackContext context);
        void OnMoveCamera(InputAction.CallbackContext context);
        void OnReturnCameraToShip(InputAction.CallbackContext context);
        void OnZoomCamera(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnFollowShip(InputAction.CallbackContext context);
    }
}
