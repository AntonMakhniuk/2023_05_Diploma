//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Player/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerShip"",
            ""id"": ""40e0c021-8b2b-47c2-8c09-0c07232be718"",
            ""actions"": [
                {
                    ""name"": ""AlignWithCamera"",
                    ""type"": ""Button"",
                    ""id"": ""e5de1bfa-6c14-42be-b71f-37d99f8fa03e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleTractorBeam"",
                    ""type"": ""Button"",
                    ""id"": ""0546c9aa-ea63-4dcc-8469-54bf924fb546"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleDrill"",
                    ""type"": ""Button"",
                    ""id"": ""eb13f302-d11f-4eed-b75f-da5959c0e791"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleGasCollector"",
                    ""type"": ""Button"",
                    ""id"": ""30a32f41-8864-45a9-b2bf-8e92cbd67098"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InstrumentPrimary"",
                    ""type"": ""Button"",
                    ""id"": ""06370757-8d74-438c-a5fc-234cf5f42477"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InstrumentSecondary"",
                    ""type"": ""Button"",
                    ""id"": ""b2505daa-6e37-4b97-b0f0-9b1bbd690924"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brakes"",
                    ""type"": ""Button"",
                    ""id"": ""f44241a1-ae12-49b1-968c-46e3a4f6f4e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thrust"",
                    ""type"": ""Value"",
                    ""id"": ""a86a0477-64f5-45aa-bbe4-972be76d9523"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Strafe"",
                    ""type"": ""Value"",
                    ""id"": ""e44975b0-3ccd-47bd-824b-055fe946f162"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""ee059aac-951f-4baf-81d1-ee94905098c8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""7b9e5dd1-91c9-485e-a0bc-9512d925bacd"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""d7272ac4-8b6d-4f83-a6da-781284d7b737"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""71cc4386-c5e5-411c-969f-63611f2d9ed5"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleDrill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da645384-fbff-45ab-9ca9-b4c431cc0d1e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleGasCollector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e09b738-071e-4b68-b10c-9dc2634a031f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleTractorBeam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""169f05d3-c038-47c4-ae33-d1d2626bb92a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InstrumentPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12e15f89-592b-4bca-8f66-9946a559425b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InstrumentSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""277b6764-9139-4d5b-a73c-3c024a818683"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brakes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ThrustKB"",
                    ""id"": ""49547e73-0abc-498d-886e-e56caf02b87f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d79a2557-b0a0-439d-b6e2-39cfffb0e2fd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ab15037f-fa99-46ba-af0d-7ec811459133"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""StrafeKB"",
                    ""id"": ""2dff6b50-469d-40ba-91ec-bc79bd829315"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""12c22c9f-127e-4c38-8404-1d4e1f9bff67"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c594dc1f-bb14-4e03-8d0c-5d890a6ab55a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PitchKB"",
                    ""id"": ""1d2474da-6d5a-4d6c-8026-8aa798182b69"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2a8e5547-52ca-4d5d-8427-8c448a0225c5"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8e62f3be-6868-4f20-8451-b59dcbd09003"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""YawKB"",
                    ""id"": ""02f67b70-fb1f-4712-af71-ab88a734f9a9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""fa205a5b-2abc-4d91-af8b-3c38c8f5f946"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6fbeb2c5-63a0-4675-b918-a50422098dda"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""RollKB"",
                    ""id"": ""ea7003a9-84c6-415e-bda9-99dc143b7013"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7bee88fd-3571-4eff-9d60-63d8834a01cd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0a005394-e7ea-4b29-8ff5-8f257be59f25"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""147738c2-2120-4d4c-a2bb-20f13d20b836"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlignWithCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""beb6d50b-661a-4f2f-8fa9-e284c8a0f514"",
            ""actions"": [
                {
                    ""name"": ""CloseWindowOpenPause"",
                    ""type"": ""Button"",
                    ""id"": ""da0059cc-2e16-4147-98b0-f124c91eab12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleInventory"",
                    ""type"": ""Button"",
                    ""id"": ""80a86b74-e1ac-4cca-8591-eb0336f64123"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleWagons"",
                    ""type"": ""Button"",
                    ""id"": ""844fb4ca-5f6b-46b4-bc5f-d46056815b0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleProduction"",
                    ""type"": ""Button"",
                    ""id"": ""b4cc0ca3-394b-43bf-891e-43a150cc40ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleJournal"",
                    ""type"": ""Button"",
                    ""id"": ""c23b05dd-131a-422c-a80f-527071feb77c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMap"",
                    ""type"": ""Button"",
                    ""id"": ""86190192-fbc8-41e2-95d8-4d7e4eedc199"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractWithObject"",
                    ""type"": ""Button"",
                    ""id"": ""24ca2de8-80ec-495f-ae17-9e4df4f681d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""a67a894f-25df-4bae-b28d-231dcfac0597"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleUpgrades"",
                    ""type"": ""Button"",
                    ""id"": ""a2ae6e64-5119-4382-9b6d-229e64ef7355"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaceBlueprint"",
                    ""type"": ""Button"",
                    ""id"": ""cbc32d01-346f-417c-b8c9-5fcac512eb45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RemoveBlueprint"",
                    ""type"": ""Button"",
                    ""id"": ""abb99322-4b38-4588-8303-994f37a3e252"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5f70ee99-4f1a-45bd-b9f9-a87e269a3118"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseWindowOpenPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""827b654f-65b4-4e47-90a2-5c7dd4f0d9ef"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e1a5d03-137b-4c00-bedf-a1eee93371ed"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleWagons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d34d2f2-01cf-4ff3-ac16-f505acaade8f"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleProduction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bef99ee-e7d9-40b8-aef7-9675bc213d63"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleJournal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c5ee2a8-21d6-4541-94e1-12f914bcf04c"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe7eb75-7fcc-49dc-b26c-a60e8a68a011"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractWithObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bdf6118-28f4-47f8-b3d0-b000b2960a8c"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""feec2ebf-0d88-4bb0-afba-0794b709776a"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleUpgrades"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc37e3d3-3af4-4ea9-a296-37885b8f9d39"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceBlueprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a51086d1-2fa6-4092-b379-442e21bdb445"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RemoveBlueprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerCamera"",
            ""id"": ""6e0f7517-3757-496d-823e-e379aeb2934a"",
            ""actions"": [
                {
                    ""name"": ""CameraMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""42c50dc8-f508-4f61-808f-053bafd339c2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d36682e0-7e25-4c8b-9fa9-488a9a09dd5c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerShip
        m_PlayerShip = asset.FindActionMap("PlayerShip", throwIfNotFound: true);
        m_PlayerShip_AlignWithCamera = m_PlayerShip.FindAction("AlignWithCamera", throwIfNotFound: true);
        m_PlayerShip_ToggleTractorBeam = m_PlayerShip.FindAction("ToggleTractorBeam", throwIfNotFound: true);
        m_PlayerShip_ToggleDrill = m_PlayerShip.FindAction("ToggleDrill", throwIfNotFound: true);
        m_PlayerShip_ToggleGasCollector = m_PlayerShip.FindAction("ToggleGasCollector", throwIfNotFound: true);
        m_PlayerShip_InstrumentPrimary = m_PlayerShip.FindAction("InstrumentPrimary", throwIfNotFound: true);
        m_PlayerShip_InstrumentSecondary = m_PlayerShip.FindAction("InstrumentSecondary", throwIfNotFound: true);
        m_PlayerShip_Brakes = m_PlayerShip.FindAction("Brakes", throwIfNotFound: true);
        m_PlayerShip_Thrust = m_PlayerShip.FindAction("Thrust", throwIfNotFound: true);
        m_PlayerShip_Strafe = m_PlayerShip.FindAction("Strafe", throwIfNotFound: true);
        m_PlayerShip_Pitch = m_PlayerShip.FindAction("Pitch", throwIfNotFound: true);
        m_PlayerShip_Yaw = m_PlayerShip.FindAction("Yaw", throwIfNotFound: true);
        m_PlayerShip_Roll = m_PlayerShip.FindAction("Roll", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_CloseWindowOpenPause = m_UI.FindAction("CloseWindowOpenPause", throwIfNotFound: true);
        m_UI_ToggleInventory = m_UI.FindAction("ToggleInventory", throwIfNotFound: true);
        m_UI_ToggleWagons = m_UI.FindAction("ToggleWagons", throwIfNotFound: true);
        m_UI_ToggleProduction = m_UI.FindAction("ToggleProduction", throwIfNotFound: true);
        m_UI_ToggleJournal = m_UI.FindAction("ToggleJournal", throwIfNotFound: true);
        m_UI_ToggleMap = m_UI.FindAction("ToggleMap", throwIfNotFound: true);
        m_UI_InteractWithObject = m_UI.FindAction("InteractWithObject", throwIfNotFound: true);
        m_UI_ToggleBuilding = m_UI.FindAction("ToggleBuilding", throwIfNotFound: true);
        m_UI_ToggleUpgrades = m_UI.FindAction("ToggleUpgrades", throwIfNotFound: true);
        m_UI_PlaceBlueprint = m_UI.FindAction("PlaceBlueprint", throwIfNotFound: true);
        m_UI_RemoveBlueprint = m_UI.FindAction("RemoveBlueprint", throwIfNotFound: true);
        // PlayerCamera
        m_PlayerCamera = asset.FindActionMap("PlayerCamera", throwIfNotFound: true);
        m_PlayerCamera_CameraMovement = m_PlayerCamera.FindAction("CameraMovement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerShip
    private readonly InputActionMap m_PlayerShip;
    private List<IPlayerShipActions> m_PlayerShipActionsCallbackInterfaces = new List<IPlayerShipActions>();
    private readonly InputAction m_PlayerShip_AlignWithCamera;
    private readonly InputAction m_PlayerShip_ToggleTractorBeam;
    private readonly InputAction m_PlayerShip_ToggleDrill;
    private readonly InputAction m_PlayerShip_ToggleGasCollector;
    private readonly InputAction m_PlayerShip_InstrumentPrimary;
    private readonly InputAction m_PlayerShip_InstrumentSecondary;
    private readonly InputAction m_PlayerShip_Brakes;
    private readonly InputAction m_PlayerShip_Thrust;
    private readonly InputAction m_PlayerShip_Strafe;
    private readonly InputAction m_PlayerShip_Pitch;
    private readonly InputAction m_PlayerShip_Yaw;
    private readonly InputAction m_PlayerShip_Roll;
    public struct PlayerShipActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerShipActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @AlignWithCamera => m_Wrapper.m_PlayerShip_AlignWithCamera;
        public InputAction @ToggleTractorBeam => m_Wrapper.m_PlayerShip_ToggleTractorBeam;
        public InputAction @ToggleDrill => m_Wrapper.m_PlayerShip_ToggleDrill;
        public InputAction @ToggleGasCollector => m_Wrapper.m_PlayerShip_ToggleGasCollector;
        public InputAction @InstrumentPrimary => m_Wrapper.m_PlayerShip_InstrumentPrimary;
        public InputAction @InstrumentSecondary => m_Wrapper.m_PlayerShip_InstrumentSecondary;
        public InputAction @Brakes => m_Wrapper.m_PlayerShip_Brakes;
        public InputAction @Thrust => m_Wrapper.m_PlayerShip_Thrust;
        public InputAction @Strafe => m_Wrapper.m_PlayerShip_Strafe;
        public InputAction @Pitch => m_Wrapper.m_PlayerShip_Pitch;
        public InputAction @Yaw => m_Wrapper.m_PlayerShip_Yaw;
        public InputAction @Roll => m_Wrapper.m_PlayerShip_Roll;
        public InputActionMap Get() { return m_Wrapper.m_PlayerShip; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerShipActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerShipActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Add(instance);
            @AlignWithCamera.started += instance.OnAlignWithCamera;
            @AlignWithCamera.performed += instance.OnAlignWithCamera;
            @AlignWithCamera.canceled += instance.OnAlignWithCamera;
            @ToggleTractorBeam.started += instance.OnToggleTractorBeam;
            @ToggleTractorBeam.performed += instance.OnToggleTractorBeam;
            @ToggleTractorBeam.canceled += instance.OnToggleTractorBeam;
            @ToggleDrill.started += instance.OnToggleDrill;
            @ToggleDrill.performed += instance.OnToggleDrill;
            @ToggleDrill.canceled += instance.OnToggleDrill;
            @ToggleGasCollector.started += instance.OnToggleGasCollector;
            @ToggleGasCollector.performed += instance.OnToggleGasCollector;
            @ToggleGasCollector.canceled += instance.OnToggleGasCollector;
            @InstrumentPrimary.started += instance.OnInstrumentPrimary;
            @InstrumentPrimary.performed += instance.OnInstrumentPrimary;
            @InstrumentPrimary.canceled += instance.OnInstrumentPrimary;
            @InstrumentSecondary.started += instance.OnInstrumentSecondary;
            @InstrumentSecondary.performed += instance.OnInstrumentSecondary;
            @InstrumentSecondary.canceled += instance.OnInstrumentSecondary;
            @Brakes.started += instance.OnBrakes;
            @Brakes.performed += instance.OnBrakes;
            @Brakes.canceled += instance.OnBrakes;
            @Thrust.started += instance.OnThrust;
            @Thrust.performed += instance.OnThrust;
            @Thrust.canceled += instance.OnThrust;
            @Strafe.started += instance.OnStrafe;
            @Strafe.performed += instance.OnStrafe;
            @Strafe.canceled += instance.OnStrafe;
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
        }

        private void UnregisterCallbacks(IPlayerShipActions instance)
        {
            @AlignWithCamera.started -= instance.OnAlignWithCamera;
            @AlignWithCamera.performed -= instance.OnAlignWithCamera;
            @AlignWithCamera.canceled -= instance.OnAlignWithCamera;
            @ToggleTractorBeam.started -= instance.OnToggleTractorBeam;
            @ToggleTractorBeam.performed -= instance.OnToggleTractorBeam;
            @ToggleTractorBeam.canceled -= instance.OnToggleTractorBeam;
            @ToggleDrill.started -= instance.OnToggleDrill;
            @ToggleDrill.performed -= instance.OnToggleDrill;
            @ToggleDrill.canceled -= instance.OnToggleDrill;
            @ToggleGasCollector.started -= instance.OnToggleGasCollector;
            @ToggleGasCollector.performed -= instance.OnToggleGasCollector;
            @ToggleGasCollector.canceled -= instance.OnToggleGasCollector;
            @InstrumentPrimary.started -= instance.OnInstrumentPrimary;
            @InstrumentPrimary.performed -= instance.OnInstrumentPrimary;
            @InstrumentPrimary.canceled -= instance.OnInstrumentPrimary;
            @InstrumentSecondary.started -= instance.OnInstrumentSecondary;
            @InstrumentSecondary.performed -= instance.OnInstrumentSecondary;
            @InstrumentSecondary.canceled -= instance.OnInstrumentSecondary;
            @Brakes.started -= instance.OnBrakes;
            @Brakes.performed -= instance.OnBrakes;
            @Brakes.canceled -= instance.OnBrakes;
            @Thrust.started -= instance.OnThrust;
            @Thrust.performed -= instance.OnThrust;
            @Thrust.canceled -= instance.OnThrust;
            @Strafe.started -= instance.OnStrafe;
            @Strafe.performed -= instance.OnStrafe;
            @Strafe.canceled -= instance.OnStrafe;
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
        }

        public void RemoveCallbacks(IPlayerShipActions instance)
        {
            if (m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerShipActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerShipActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerShipActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerShipActions @PlayerShip => new PlayerShipActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_CloseWindowOpenPause;
    private readonly InputAction m_UI_ToggleInventory;
    private readonly InputAction m_UI_ToggleWagons;
    private readonly InputAction m_UI_ToggleProduction;
    private readonly InputAction m_UI_ToggleJournal;
    private readonly InputAction m_UI_ToggleMap;
    private readonly InputAction m_UI_InteractWithObject;
    private readonly InputAction m_UI_ToggleBuilding;
    private readonly InputAction m_UI_ToggleUpgrades;
    private readonly InputAction m_UI_PlaceBlueprint;
    private readonly InputAction m_UI_RemoveBlueprint;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseWindowOpenPause => m_Wrapper.m_UI_CloseWindowOpenPause;
        public InputAction @ToggleInventory => m_Wrapper.m_UI_ToggleInventory;
        public InputAction @ToggleWagons => m_Wrapper.m_UI_ToggleWagons;
        public InputAction @ToggleProduction => m_Wrapper.m_UI_ToggleProduction;
        public InputAction @ToggleJournal => m_Wrapper.m_UI_ToggleJournal;
        public InputAction @ToggleMap => m_Wrapper.m_UI_ToggleMap;
        public InputAction @InteractWithObject => m_Wrapper.m_UI_InteractWithObject;
        public InputAction @ToggleBuilding => m_Wrapper.m_UI_ToggleBuilding;
        public InputAction @ToggleUpgrades => m_Wrapper.m_UI_ToggleUpgrades;
        public InputAction @PlaceBlueprint => m_Wrapper.m_UI_PlaceBlueprint;
        public InputAction @RemoveBlueprint => m_Wrapper.m_UI_RemoveBlueprint;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @CloseWindowOpenPause.started += instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.performed += instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.canceled += instance.OnCloseWindowOpenPause;
            @ToggleInventory.started += instance.OnToggleInventory;
            @ToggleInventory.performed += instance.OnToggleInventory;
            @ToggleInventory.canceled += instance.OnToggleInventory;
            @ToggleWagons.started += instance.OnToggleWagons;
            @ToggleWagons.performed += instance.OnToggleWagons;
            @ToggleWagons.canceled += instance.OnToggleWagons;
            @ToggleProduction.started += instance.OnToggleProduction;
            @ToggleProduction.performed += instance.OnToggleProduction;
            @ToggleProduction.canceled += instance.OnToggleProduction;
            @ToggleJournal.started += instance.OnToggleJournal;
            @ToggleJournal.performed += instance.OnToggleJournal;
            @ToggleJournal.canceled += instance.OnToggleJournal;
            @ToggleMap.started += instance.OnToggleMap;
            @ToggleMap.performed += instance.OnToggleMap;
            @ToggleMap.canceled += instance.OnToggleMap;
            @InteractWithObject.started += instance.OnInteractWithObject;
            @InteractWithObject.performed += instance.OnInteractWithObject;
            @InteractWithObject.canceled += instance.OnInteractWithObject;
            @ToggleBuilding.started += instance.OnToggleBuilding;
            @ToggleBuilding.performed += instance.OnToggleBuilding;
            @ToggleBuilding.canceled += instance.OnToggleBuilding;
            @ToggleUpgrades.started += instance.OnToggleUpgrades;
            @ToggleUpgrades.performed += instance.OnToggleUpgrades;
            @ToggleUpgrades.canceled += instance.OnToggleUpgrades;
            @PlaceBlueprint.started += instance.OnPlaceBlueprint;
            @PlaceBlueprint.performed += instance.OnPlaceBlueprint;
            @PlaceBlueprint.canceled += instance.OnPlaceBlueprint;
            @RemoveBlueprint.started += instance.OnRemoveBlueprint;
            @RemoveBlueprint.performed += instance.OnRemoveBlueprint;
            @RemoveBlueprint.canceled += instance.OnRemoveBlueprint;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @CloseWindowOpenPause.started -= instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.performed -= instance.OnCloseWindowOpenPause;
            @CloseWindowOpenPause.canceled -= instance.OnCloseWindowOpenPause;
            @ToggleInventory.started -= instance.OnToggleInventory;
            @ToggleInventory.performed -= instance.OnToggleInventory;
            @ToggleInventory.canceled -= instance.OnToggleInventory;
            @ToggleWagons.started -= instance.OnToggleWagons;
            @ToggleWagons.performed -= instance.OnToggleWagons;
            @ToggleWagons.canceled -= instance.OnToggleWagons;
            @ToggleProduction.started -= instance.OnToggleProduction;
            @ToggleProduction.performed -= instance.OnToggleProduction;
            @ToggleProduction.canceled -= instance.OnToggleProduction;
            @ToggleJournal.started -= instance.OnToggleJournal;
            @ToggleJournal.performed -= instance.OnToggleJournal;
            @ToggleJournal.canceled -= instance.OnToggleJournal;
            @ToggleMap.started -= instance.OnToggleMap;
            @ToggleMap.performed -= instance.OnToggleMap;
            @ToggleMap.canceled -= instance.OnToggleMap;
            @InteractWithObject.started -= instance.OnInteractWithObject;
            @InteractWithObject.performed -= instance.OnInteractWithObject;
            @InteractWithObject.canceled -= instance.OnInteractWithObject;
            @ToggleBuilding.started -= instance.OnToggleBuilding;
            @ToggleBuilding.performed -= instance.OnToggleBuilding;
            @ToggleBuilding.canceled -= instance.OnToggleBuilding;
            @ToggleUpgrades.started -= instance.OnToggleUpgrades;
            @ToggleUpgrades.performed -= instance.OnToggleUpgrades;
            @ToggleUpgrades.canceled -= instance.OnToggleUpgrades;
            @PlaceBlueprint.started -= instance.OnPlaceBlueprint;
            @PlaceBlueprint.performed -= instance.OnPlaceBlueprint;
            @PlaceBlueprint.canceled -= instance.OnPlaceBlueprint;
            @RemoveBlueprint.started -= instance.OnRemoveBlueprint;
            @RemoveBlueprint.performed -= instance.OnRemoveBlueprint;
            @RemoveBlueprint.canceled -= instance.OnRemoveBlueprint;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // PlayerCamera
    private readonly InputActionMap m_PlayerCamera;
    private List<IPlayerCameraActions> m_PlayerCameraActionsCallbackInterfaces = new List<IPlayerCameraActions>();
    private readonly InputAction m_PlayerCamera_CameraMovement;
    public struct PlayerCameraActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerCameraActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraMovement => m_Wrapper.m_PlayerCamera_CameraMovement;
        public InputActionMap Get() { return m_Wrapper.m_PlayerCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerCameraActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerCameraActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Add(instance);
            @CameraMovement.started += instance.OnCameraMovement;
            @CameraMovement.performed += instance.OnCameraMovement;
            @CameraMovement.canceled += instance.OnCameraMovement;
        }

        private void UnregisterCallbacks(IPlayerCameraActions instance)
        {
            @CameraMovement.started -= instance.OnCameraMovement;
            @CameraMovement.performed -= instance.OnCameraMovement;
            @CameraMovement.canceled -= instance.OnCameraMovement;
        }

        public void RemoveCallbacks(IPlayerCameraActions instance)
        {
            if (m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerCameraActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerCameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerCameraActions @PlayerCamera => new PlayerCameraActions(this);
    public interface IPlayerShipActions
    {
        void OnAlignWithCamera(InputAction.CallbackContext context);
        void OnToggleTractorBeam(InputAction.CallbackContext context);
        void OnToggleDrill(InputAction.CallbackContext context);
        void OnToggleGasCollector(InputAction.CallbackContext context);
        void OnInstrumentPrimary(InputAction.CallbackContext context);
        void OnInstrumentSecondary(InputAction.CallbackContext context);
        void OnBrakes(InputAction.CallbackContext context);
        void OnThrust(InputAction.CallbackContext context);
        void OnStrafe(InputAction.CallbackContext context);
        void OnPitch(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnCloseWindowOpenPause(InputAction.CallbackContext context);
        void OnToggleInventory(InputAction.CallbackContext context);
        void OnToggleWagons(InputAction.CallbackContext context);
        void OnToggleProduction(InputAction.CallbackContext context);
        void OnToggleJournal(InputAction.CallbackContext context);
        void OnToggleMap(InputAction.CallbackContext context);
        void OnInteractWithObject(InputAction.CallbackContext context);
        void OnToggleBuilding(InputAction.CallbackContext context);
        void OnToggleUpgrades(InputAction.CallbackContext context);
        void OnPlaceBlueprint(InputAction.CallbackContext context);
        void OnRemoveBlueprint(InputAction.CallbackContext context);
    }
    public interface IPlayerCameraActions
    {
        void OnCameraMovement(InputAction.CallbackContext context);
    }
}
